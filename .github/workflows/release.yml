name: release

on:
  workflow_dispatch:
    inputs:
      release_name:
        required: true
        type: string
        default: "wit-idl: v0.0.1"
      tag_name:
        required: true
        type: string
        default: "wit-idl-v0.0.1"
  release:
    types:
      - released

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      release_name: ${{ steps.event_details.outputs.release_name }}
      tag_name: ${{ steps.event_details.outputs.tag_name }}
      version: ${{ steps.event_details.outputs.version }}
    steps:
      - name: Check event details
        id: event_details
        env:
          RELEASE_NAME: ${{ github.event.release.name || inputs.release_name }}
          TAG_NAME: ${{ github.event.release.tag_name || inputs.tag_name }}
        run: |
          echo "release_name=${RELEASE_NAME}" >> $GITHUB_OUTPUT
          echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT
          echo "version=${TAG_NAME##*-v}" >> $GITHUB_OUTPUT
          echo "package_name=${RELEASE_NAME%:*}" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.event_details.outputs.tag_name }}
      - name: Add files and publish release
        env:
          GITHUB_TOKEN: ${{ github.token }}
          VSCE_PAT: ${{ secrets.PAT_VSCE }}
          TAG_NAME: ${{ steps.event_details.outputs.tag_name }}
        run: |
          npm ci
          npm run package
          mv wit-idl.vsix ${TAG_NAME}.vsix
          gh release upload ${TAG_NAME} ${TAG_NAME}.vsix
          vsce publish --package-path ${TAG_NAME}.vsix

  label:
    needs: [publish]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
      repository-projects: read
    steps:
      - uses: actions/checkout@v3

      - name: Add label to PR
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          PR_NUMBER=$(gh pr list --state merged --label 'autorelease: tagged' --json number --jq '.[0].number')
          gh pr edit ${PR_NUMBER} --add-label 'autorelease: published'

  comments:
    needs: [publish]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - uses: apexskier/github-release-commenter@v1
        with:
          GITHUB_TOKEN: ${{ github.token }}
          comment-template: |
            :tada: This change has been included in ${{ needs.publish.outputs.tag_name }} :tada:

            The release is available on:
            - GitHub releases: {release_link}

            Your **[release-please](https://github.com/googleapis/release-please)** bot :rocket::pray:
